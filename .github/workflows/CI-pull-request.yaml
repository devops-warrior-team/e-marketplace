name: "CI on Pull Request"
on: 
  pull_request:
    branches:
      - main

env:
  IMAGE_NAME: docker.io/feriva22/e-marketplace
jobs:

  code-style-linter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Composer Dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Code Style Check
        run: ./vendor/bin/pint

  static-analysis-code:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Composer Dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Static Analyst Code
        run: ./vendor/bin/phpstan analyse

  unit-feature-testing:
    needs: [code-style-linter, static-analysis-code ]
    runs-on: ubuntu-latest
    env:
      DB_USERNAME: root
      DB_PASSWORD: root
      DB_DATABASE: laravel
    steps:
      - uses: actions/checkout@v3
      - name: Prepare The Environment
        run: cp .env.testing .env
      - name: Create Database
        run: |
          sudo systemctl start mysql
          mysql --user="root" --password="root" -e "CREATE DATABASE \`laravel\` character set UTF8mb4 collate utf8mb4_bin;"
      - name: Install Composer Dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader
      - name: Install NodeJS Packages
        run: npm install
      - name: Build assets nodejs
        run: npm run build
      - name: Generate Application Key
        run: php artisan key:generate
      - name: Run Unit & Feature Tests
        run: php artisan test

  browser-testing:
    needs: [code-style-linter, static-analysis-code ]
    runs-on: ubuntu-latest
    env:
      APP_URL: "http://127.0.0.1:8000"
      DB_USERNAME: root
      DB_PASSWORD: root
      MAIL_MAILER: log
    steps:
      - uses: actions/checkout@v3
      - name: Prepare The Environment
        run: cp .env.testing .env
      - name: Create Database
        run: |
          sudo systemctl start mysql
          mysql --user="root" --password="root" -e "CREATE DATABASE \`laravel\` character set UTF8mb4 collate utf8mb4_bin;"
      - name: Install Composer Dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader
      - name: Install NodeJS Packages
        run: npm install
      - name: Build assets nodejs
        run: npm run build
      - name: Generate Application Key
        run: php artisan key:generate
      - name: Upgrade Chrome Driver
        run: php artisan dusk:chrome-driver --detect
      - name: Start Chrome Driver
        run: ./vendor/laravel/dusk/bin/chromedriver-linux &
      - name: Run Laravel Server
        run: php artisan serve --no-reload &
      - name: Run Dusk Tests
        run: php artisan dusk
      - name: Upload Screenshots
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: screenshots
          path: tests/Browser/screenshots
      - name: Upload Console Logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: console
          path: tests/Browser/console

  build-and-push:
      needs: [unit-feature-testing, browser-testing ]
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Login to Container Registry
          run : |
            docker login -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }} docker.io
        
        - name: Set up Docker Buildx
          id: buildx
          uses: docker/setup-buildx-action@v1

        - name: Cache Docker layers
          run: |
            docker buildx create --use
            docker buildx inspect --bootstrap

        - name: CHeck Build Docker Image
          run: |
            docker buildx build  -t ${{ env.IMAGE_NAME }}:${{ github.run_number }} .